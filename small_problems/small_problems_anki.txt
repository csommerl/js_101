# Small Problems
Math.abs(); function that returns the absolute value of a number. That is, it returns x if x is positive or zero, and the negation of x if x is negative.; js101
how to create package.json; npm init -y; js101
readlineSync.prompt([options]); basic way to have JS command line prompt for user input; js101
what to do each time a user enters numberical input; always make sure to convert/parse to string/float; js101
The difference between parseFloat and Number; So as long as you have standard numeric input, there's no difference. However, if your input starts with a number and then contains other characters, parseFloat truncates the number out of the string, while Number gives NaN; js101
When to use String.prototype.slice() instead of String.prototype.substring()?; What to use when you get a portion of a string using negative numbers, e.g., to cut off and exclude the end of the string; js101
Math.pow(); function that returns the base to the exponent power, as in base^exponent; js101
Bitwise XOR (^); returns a 1 in each bit position for which the corresponding bits of either but not both operands are 1s.; js101
Reasons to use String() in preference to toString(); String() works with all types, including null and undefined, while toString() raises an exception in those cases. String() is guaranteed to return a string. This is not the case with toString() â€” individual objects can override toString() and they don't have to return a string.; js101
Math.sign(); function that returns either a positive or negative +/- 1, indicating the sign of a number passed into the argument. If the number passed into Math.sign() is 0, it will return a +/- 0. Note that if the number is positive, an explicit (+) will not be returned.; js101
Spread syntax (...); syntax that allows an iterable such as an array expression or string to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected; js101
> let [firstVariable, secondVariable, ...] = [list, valueOne, valueTwo]; The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.; js101
Array.prototype.some(); method that tests whether at least one element in the array passes the test implemented by the provided function. It returns true if, in the array, it finds an element for which the provided function returns true. Otherwise it returns false. It doesn't modify the array.; js101

