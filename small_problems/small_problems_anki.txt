# Small Problems
Math.abs(); function that returns the absolute value of a number. That is, it returns x if x is positive or zero, and the negation of x if x is negative.; js101
how to create package.json; npm init -y; js101
readlineSync.prompt([options]); basic way to have JS command line prompt for user input; js101
what to do each time a user enters numberical input; always make sure to convert/parse to string/float; js101
The difference between parseFloat and Number; So as long as you have standard numeric input, there's no difference. However, if your input starts with a number and then contains other characters, parseFloat truncates the number out of the string, while Number gives NaN; js101
When to use String.prototype.slice() instead of String.prototype.substring()?; What to use when you get a portion of a string using negative numbers, e.g., to cut off and exclude the end of the string; js101
Math.pow(); function that returns the base to the exponent power, as in base^exponent; js101
Bitwise XOR (^); returns a 1 in each bit position for which the corresponding bits of either but not both operands are 1s.; js101
Reasons to use String() in preference to toString(); String() works with all types, including null and undefined, while toString() raises an exception in those cases. String() is guaranteed to return a string. This is not the case with toString() â€” individual objects can override toString() and they don't have to return a string.; js101
Math.sign(); function that returns either a positive or negative +/- 1, indicating the sign of a number passed into the argument. If the number passed into Math.sign() is 0, it will return a +/- 0. Note that if the number is positive, an explicit (+) will not be returned.; js101
Best way to convert a string to an array; Don't use Array.from(), and instead use String.prototype.split; js101
step/s in Node Debugger; how to "step in" in Node Debugger: if there is a function call, it goes inside the function and you can see how the function is executing line by line till it returns and you go back to the next line right after the function call.; js101
out/o in Node Debugger; how to "step out" in Node Debugger: means that if you have Stepped in a function and now you want to skip seeing how the rest of the function is going to execute, you Step out and the function returns. Then, you go back to the next line, that is the line right after the function call.; js101
> obj.x = obj.x || 0; how to use short-circuit evaluation in assigning a value to a property: Here, it either maintains the original value of obj.x or sets a new property value to 0: in either case, obj.x can be further manipulated, e.g., through arithmetical assignment operations; js101
rest parameter syntax (...theArgs); allows a function to accept an indefinite number of arguments as an array, providing a way to represent variadic functions in JavaScript.; js101
Difference between rest parameters & spread syntax?; Rest parameters are used to create functions that accept any number of arguments. Spread syntax is used to pass an array to functions that normally require a list of many arguments.; js101
Array.prototype.lastIndexOf(); The lastIndexOf() method returns the last index at which a given element can be found in the array, or -1 if it is not present. The array is searched backwards, starting at fromIndex.; js101
When to write an explicit return of undefined; although an implicit return of undefined will occur, ESLint will complain and more importantly expliciting returning undefined makes clear the intent; js101
Date.prototype.setMinutes(); method that sets the minutes for a specified date according to local time.; js101
Date.prototype.setHours(); method that sets the hours for a specified date according to local time, and returns the number of milliseconds since January 1, 1970 00:00:00 UTC until the time represented by the updated Date instance.; j2101
Date.prototype.getHours(); method that returns the hour for the specified date, according to local time.; js101
Date.prototype.getMinutes(); method that returns the minutes in the specified date according to local time.; js101
/[A-Za-z]/.test(char); how to test for only alphabetical characters; js101
Math.abs(); function that returns the absolute value of a number. That is, it returns x if x is positive or zero, and the negation of x if x is negative; js101
Difference in behavior between 0 & -0; the only main difference has to do with dealing with Infinity. Dividing a positive number by negative zero -0 or a negative number by positive zero +0 will both produce the result -Infinity; js101
How to determine whether 0 and -0 are the same; use Object.is(), since you can't test with equality; js101
Regex //i meaning; Tells the regex engine to ignore case.; js101
arguments reserved keyword; an Array-like object accessible inside functions that contains the values of the arguments passed to that function. Can be used, e.g., in guard clauses. Note that arrow functions do not have access to the arguments object.; js101
stack; a list of values that grows and shrinks dynamically; js101
stack-and-register programming language; a language that uses a stack of values; js101
register; can be thought of as the current value, not part of the stack; js101
How to create a regular expression with a variable; Use let re = new RegExp('ab+c', 'i'); js101
regexp \b; anchors regex matches to word boundaries; js101
When do word boundaries occur?; 1) between any pair of characters, one of which is a word character and one which is not. 2) at the beginning of a string if the first character is a word character. 3) at the end of a string if the last character is a word character.; js101
Three qualities of a good recursive function; 1. calls itself at least once, 2. has an ending condition, 3. results of each recursion are used in each step; js101
memoization; approach that involves saving a computed answer for future reuse, instead of computing it from scratch every time it is needed; js101
